// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/abhinav/git-fu/pr (interfaces: Visitor)

package prtest

import (
	pr "github.com/abhinav/git-fu/pr"
	github "github.com/google/go-github/github"
	gomock "github.com/golang/mock/gomock"
)

// Mock of Visitor interface
type MockVisitor struct {
	ctrl     *gomock.Controller
	recorder *_MockVisitorRecorder
}

// Recorder for MockVisitor (not exported)
type _MockVisitorRecorder struct {
	mock *MockVisitor
}

func NewMockVisitor(ctrl *gomock.Controller) *MockVisitor {
	mock := &MockVisitor{ctrl: ctrl}
	mock.recorder = &_MockVisitorRecorder{mock}
	return mock
}

func (_m *MockVisitor) EXPECT() *_MockVisitorRecorder {
	return _m.recorder
}

func (_m *MockVisitor) Visit(_param0 *github.PullRequest) (pr.Visitor, error) {
	ret := _m.ctrl.Call(_m, "Visit", _param0)
	ret0, _ := ret[0].(pr.Visitor)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockVisitorRecorder) Visit(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Visit", arg0)
}
